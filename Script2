local lp = game.Players.LocalPlayer
local char = lp.Character or lp.CharacterAdded:Wait()
local hum = char:WaitForChild("Humanoid")
local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")

-- GUI
local gui = Instance.new("ScreenGui", lp:WaitForChild("PlayerGui"))
gui.Name = "PowerHub"
gui.ResetOnSpawn = false

-- Toggle Button (Circular)
local toggle = Instance.new("TextButton")
toggle.Name = "Toggle"
toggle.Size = UDim2.new(0, 50, 0, 50)
toggle.Position = UDim2.new(0, 20, 0.5, -25)
toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
toggle.Text = "â‰¡"
toggle.TextScaled = true
toggle.TextColor3 = Color3.new(1, 1, 1)
toggle.BorderSizePixel = 0
toggle.Parent = gui
Instance.new("UICorner", toggle)

-- Main Panel (Rectangular)
local panel = Instance.new("Frame")
panel.Size = UDim2.new(0, 200, 0, 150)
panel.Position = UDim2.new(0, 80, 0.5, -75)
panel.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
panel.BorderSizePixel = 0
panel.Visible = false
panel.Parent = gui
panel.Active = true
panel.Draggable = true

-- Title
local title = Instance.new("TextLabel", panel)
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundTransparency = 1
title.Text = "PowerHub"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 20

-- God Mode Button
local godBtn = Instance.new("TextButton", panel)
godBtn.Size = UDim2.new(1, -20, 0, 40)
godBtn.Position = UDim2.new(0, 10, 0, 50)
godBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
godBtn.TextColor3 = Color3.new(1, 1, 1)
godBtn.Font = Enum.Font.GothamBold
godBtn.Text = "Activate God Mode"
godBtn.TextSize = 16
Instance.new("UICorner", godBtn)

-- God Mode Logic
local active = false
local allowGodMode = true

local function enableGodMode()
	if active or not allowGodMode then return end
	active = true

	-- Speed Boost
	hum.WalkSpeed = 150

	-- Noclip
	rs.Stepped:Connect(function()
		if active and lp.Character then
			for _, part in pairs(lp.Character:GetDescendants()) do
				if part:IsA("BasePart") then
					part.CanCollide = false
				end
			end
		end
	end)

	-- Infinite Jump
	uis.JumpRequest:Connect(function()
		if active and hum then
			hum:ChangeState(Enum.HumanoidStateType.Jumping)
		end
	end)

	-- Highlight Other Players
	rs.RenderStepped:Connect(function()
		if not active then return end
		for _, plr in pairs(game.Players:GetPlayers()) do
			if plr ~= lp and plr.Character and not plr.Character:FindFirstChild("Highlight") then
				local highlight = Instance.new("Highlight")
				highlight.FillColor = Color3.fromRGB(255, 0, 0)
				highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
				highlight.FillTransparency = 0.5
				highlight.OutlineTransparency = 0
				highlight.Parent = plr.Character
			end
		end
	end)
end

-- Toggle GUI visibility
toggle.MouseButton1Click:Connect(function()
	panel.Visible = not panel.Visible
end)

-- God Mode button click
godBtn.MouseButton1Click:Connect(function()
	if allowGodMode then
		enableGodMode()
	end
end)

-- On player death
local function onDeath()
	allowGodMode = false
	active = false
	godBtn.Text = "Turn on God Mode"
	godBtn.TextColor3 = Color3.fromRGB(200, 0, 0)
end

-- On respawn: unlock God Mode button again
local function onRespawn(char)
	char:WaitForChild("Humanoid")
	hum = char.Humanoid
	active = false
	allowGodMode = true
	godBtn.Text = "Activate God Mode"
	godBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
end

-- Connect death and respawn events
hum.Died:Connect(onDeath)
lp.CharacterAdded:Connect(onRespawn)
